1. Write a query that uses a subquery to obtain all orders for the customer named
Cisneros. Assume you do not know his customer number (cnum).

mysql> select o.onum from orders o where cnum = (select c.cnum from customers c where cname='Cisneros');
+------+
| onum |
+------+
| 3001 |
| 3006 |
+------+

2. Write a query that produces the names and ratings of all customers who have 
aboveaverage orders.


mysql> select cname, rating from customers where cnum = any(select cnum from orders where amt>(select avg(amt) from orders));
+---------+--------+
| cname   | rating |
+---------+--------+
| Liu     |    200 |
| Clemens |    100 |
+---------+--------+


3. Write a query that selects the total amount in orders for each salesperson for whom
this total is greater than the amount of the largest order in the table.

mysql> select sum(amt), snum from orders group by snum having sum(amt)>(select max(amt) from orders);
+----------+------+
| sum(amt) | snum |
+----------+------+
| 15382.07 | 1001 |
+----------+------+

4. Write a query that selects all customers whose ratings are equal to or greater than
ANY of Serres’.

mysql> select * from customers where rating>= any (select rating from customers where snum=(select snum from salespeople where sname ='Serres'))
    -> and snum!=(select snum from salespeople where sname ='Serres');
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2002 | Giovanni | Rome     |    200 | 1003 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+

5. Write a query using ANY or ALL that will find all salespeople who have no customers
located in their city.

mysql> select sname, city from salespeople where city!= all(select distinct city from customers);
+---------+-----------+
| sname   | city      |
+---------+-----------+
| Rifkin  | Barcelona |
| Axelrod | New York  |
+---------+-----------+

6. Write a query that selects all orders for amounts greater than any for the customers in
London.

mysql> select * from orders where amt> any(select amt from orders where snum =
    -> any(select snum from customers where city='london'))
    -> and (snum!= all(select snum from customers where city='london'));
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
+------+---------+------------+------+------+

7. Extract all the orders of Motika.

mysql> select onum from orders where snum = any(select snum from salespeople where sname='Motika');
+------+
| onum |
+------+
| 3002 |
+------+

8. Find all the order attribute to salespeople servicing customers in London.

mysql> select * from orders where snum = any(select snum from salespeople where city='london');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3008 | 4723.00 | 1990-10-04 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-04 | 2006 | 1001 |
+------+---------+------------+------+------+

9. Find names and numbers of all salesperson who have more than one customer.

mysql> select snum, sname from salespeople where snum = any(select snum from customers group by snum having  count(cname)>1);
+------+--------+
| snum | sname  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+

10. Find salespeople number,name and city who have multiple customers.

mysql> select snum, sname, city from salespeople where snum = any(select snum from customers group by snum having  count(cname)>1);
+------+--------+----------+
| snum | sname  | city     |
+------+--------+----------+
| 1001 | Peel   | London   |
| 1002 | Serres | San Jose |
+------+--------+----------+

11. Select customers who have a greater rating than any other customer in Rome.

mysql> select * from customers where rating> any(select rating from customers where city='rome') and city!='ROME';
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2003 | Liu      | San Jose |    200 | 1002 |
| 2004 | Grass    | Berlin   |    300 | 1002 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+

12. Select all orders that had amounts that were greater that atleast one of the orders
from ‘1990-10-04’.

set @samp = (select min(amt) from orders group by odate limit 1,1);
mysql> select onum,amt from orders where amt>=(@samp) and amt!=@samp;
+------+---------+
| onum | amt     |
+------+---------+
| 3003 |  767.19 |
| 3002 | 1900.10 |
| 3005 | 5160.45 |
| 3006 | 1098.16 |
| 3009 | 1713.23 |
| 3008 | 4723.00 |
| 3010 |  309.95 |
| 3011 | 9891.88 |
+------+---------+

13. Find all orders with amounts smaller than any amount for a customer in San Jose.

mysql> select * from orders where amt< any (select amt from orders where snum =
    -> any (select snum from customers where city='san jose')) and
    -> snum!= all(select snum from customers where city='san jose');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-10-04 | 2006 | 1001 |
+------+---------+------------+------+------+

14. Select those customers whose rating are higher than every customer in Paris.

mysql> select cname, rating from customers where rating > all(select rating from orders where city='paris');
+----------+--------+
| cname    | rating |
+----------+--------+
| Hoffman  |    100 |
| Giovanni |    200 |
| Liu      |    200 |
| Grass    |    300 |
| Clemens  |    100 |
| Cisneros |    300 |
| Pereira  |    100 |
+----------+--------+