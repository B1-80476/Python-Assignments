1.Write a MongoDB query to display all the documents in the collection restaurants.
--->

db.restaurants.find().pretty()
{
	"_id" : ObjectId("6549fddc0fba03852f1bed55"),
	"address" : {
		"building" : "1007",
		"coord" : [
			-73.856077,
			40.848447
		],
		"street" : "Morris Park Ave",
		"zipcode" : "10462"
	},
	"borough" : "Bronx",
	"cuisine" : "Bakery",
	"grades" : [
		{
			"date" : ISODate("2014-03-03T00:00:00Z"),
			"grade" : "A",
			"score" : 2
		},
		{
			"date" : ISODate("2013-09-11T00:00:00Z"),
			"grade" : "A",
			"score" : 6
		},
		{
			"date" : ISODate("2013-01-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2011-11-23T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2011-03-10T00:00:00Z"),
			"grade" : "B",
			"score" : 14
		}
	],
	"name" : "Morris Park Bake Shop",
	"restaurant_id" : "30075445"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed56"),
	"address" : {
		"building" : "8825",
		"coord" : [
			-73.8803827,
			40.7643124
		],
		"street" : "Astoria Boulevard",
		"zipcode" : "11369"
	},
	"borough" : "Queens",
	"cuisine" : "American ",
	"grades" : [
		{
			"date" : ISODate("2014-11-15T00:00:00Z"),
			"grade" : "Z",
			"score" : 38
		},
		{
			"date" : ISODate("2014-05-02T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-03-02T00:00:00Z"),
			"grade" : "A",
			"score" : 7
		},
		{
			"date" : ISODate("2012-02-10T00:00:00Z"),
			"grade" : "A",
			"score" : 13
		}
	],
	"name" : "Brunos On The Boulevard",
	"restaurant_id" : "40356151"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed57"),
	"address" : {
		"building" : "469",
		"coord" : [
			-73.961704,
			40.662942
		],
		"street" : "Flatbush Avenue",
		"zipcode" : "11225"
	},
	"borough" : "Brooklyn",
	"cuisine" : "Hamburgers",
	"grades" : [
		{
			"date" : ISODate("2014-12-30T00:00:00Z"),
			"grade" : "A",
			"score" : 8
		},
		{
			"date" : ISODate("2014-07-01T00:00:00Z"),
			"grade" : "B",
			"score" : 23
		},
		{
			"date" : ISODate("2013-04-30T00:00:00Z"),
			"grade" : "A",
			"score" : 12
		},
		{
			"date" : ISODate("2012-05-08T00:00:00Z"),
			"grade" : "A",
			"score" : 12
		}
	],
	"name" : "Wendy'S",
	"restaurant_id" : "30112340"
}



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine for all
the documents in the collection restaurant.

--->  

db.restaurants.find({},{restaurant_id:1,name:1,borough:1,cuisine:1}).pretty()
{
	"_id" : ObjectId("6549fddc0fba03852f1bed55"),
	"borough" : "Bronx",
	"cuisine" : "Bakery",
	"name" : "Morris Park Bake Shop",
	"restaurant_id" : "30075445"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed56"),
	"borough" : "Queens",
	"cuisine" : "American ",
	"name" : "Brunos On The Boulevard",
	"restaurant_id" : "40356151"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed57"),
	"borough" : "Brooklyn",
	"cuisine" : "Hamburgers",
	"name" : "Wendy'S",
	"restaurant_id" : "30112340"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed58"),
	"borough" : "Staten Island",
	"cuisine" : "Jewish/Kosher",
	"name" : "Kosher Island",
	"restaurant_id" : "40356442"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed59"),
	"borough" : "Brooklyn",
	"cuisine" : "American ",
	"name" : "Riviera Caterer",
	"restaurant_id" : "40356018"
}



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3. Write a MongoDB query to display the fields restaurant_id, name, borough and cuisine, but
exclude the field _id for all the documents in the collection restaurant.

--->

db.restaurants.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0}).pretty()
{
	"borough" : "Bronx",
	"cuisine" : "Bakery",
	"name" : "Morris Park Bake Shop",
	"restaurant_id" : "30075445"
}
{
	"borough" : "Queens",
	"cuisine" : "American ",
	"name" : "Brunos On The Boulevard",
	"restaurant_id" : "40356151"
}
{
	"borough" : "Brooklyn",
	"cuisine" : "Hamburgers",
	"name" : "Wendy'S",
	"restaurant_id" : "30112340"
}
{
	"borough" : "Staten Island",
	"cuisine" : "Jewish/Kosher",
	"name" : "Kosher Island",
	"restaurant_id" : "40356442"
}
{
	"borough" : "Brooklyn",
	"cuisine" : "American ",
	"name" : "Riviera Caterer",
	"restaurant_id" : "40356018"
}



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. Write a MongoDB query to display the fields restaurant_id, name, borough and zip code, but
exclude the field _id for all the documents in the collection restaurant.

--->

db.restaurants.find( {} , {restaurant_id:1, name:1, borough:1 , address : {zipcode:1} ,_id:0})

{ "address" : { "zipcode" : "10462" }, "borough" : "Bronx", "name" : "Morris Park Bake Shop", "restaurant_id" : "30075445" }
{ "address" : { "zipcode" : "11369" }, "borough" : "Queens", "name" : "Brunos On The Boulevard", "restaurant_id" : "40356151" }
{ "address" : { "zipcode" : "11225" }, "borough" : "Brooklyn", "name" : "Wendy'S", "restaurant_id" : "30112340" }
{ "address" : { "zipcode" : "10314" }, "borough" : "Staten Island", "name" : "Kosher Island", "restaurant_id" : "40356442" }
{ "address" : { "zipcode" : "11224" }, "borough" : "Brooklyn", "name" : "Riviera Caterer", "restaurant_id" : "40356018" }



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. Write a MongoDB query to display all the restaurant which is in the borough Bronx.

--->

db.restaurants.findb.restaurants.find({borough:'Bronx'}).pretty()
{
	"_id" : ObjectId("6549fddc0fba03852f1bed55"),
	"address" : {
		"building" : "1007",
		"coord" : [
			-73.856077,
			40.848447
		],
		"street" : "Morris Park Ave",
		"zipcode" : "10462"
	},
	"borough" : "Bronx",
	"cuisine" : "Bakery",
	"grades" : [
		{
			"date" : ISODate("2014-03-03T00:00:00Z"),
			"grade" : "A",
			"score" : 2
		},
		{
			"date" : ISODate("2013-09-11T00:00:00Z"),
			"grade" : "A",
			"score" : 6
		},
		{
			"date" : ISODate("2013-01-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2011-11-23T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2011-03-10T00:00:00Z"),
			"grade" : "B",
			"score" : 14
		}
	],
	"name" : "Morris Park Bake Shop",
	"restaurant_id" : "30075445"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed5c"),
	"address" : {
		"building" : "2300",
		"coord" : [
			-73.8786113,
			40.8502883
		],
		"street" : "Southern Boulevard",
		"zipcode" : "10460"
	},
	"borough" : "Bronx",
	"cuisine" : "American ",
	"grades" : [
		{
			"date" : ISODate("2014-05-28T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2013-06-19T00:00:00Z"),
			"grade" : "A",
			"score" : 4
		},
		{
			"date" : ISODate("2012-06-15T00:00:00Z"),
			"grade" : "A",
			"score" : 3
		}
	],
	"name" : "Wild Asia",
	"restaurant_id" : "40357217"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed72"),
	"address" : {
		"building" : "1006",
		"coord" : [
			-73.84856870000002,
			40.8903781
		],
		"street" : "East 233 Street",
		"zipcode" : "10466"
	},
	"borough" : "Bronx",
	"cuisine" : "Ice Cream, Gelato, Yogurt, Ices",
	"grades" : [
		{
			"date" : ISODate("2014-04-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-09-05T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-02-21T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2012-07-03T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2011-07-11T00:00:00Z"),
			"grade" : "A",
			"score" : 5
		}
	],
	"name" : "Carvel Ice Cream",
	"restaurant_id" : "40363093"
db.restaurants.find({borough:'Bronx'}).pretty().limit(5)
{
	"_id" : ObjectId("6549fddc0fba03852f1bed55"),
	"address" : {
		"building" : "1007",
		"coord" : [
			-73.856077,
			40.848447
		],
		"street" : "Morris Park Ave",
		"zipcode" : "10462"
	},
	"borough" : "Bronx",
	"cuisine" : "Bakery",
	"grades" : [
		{
			"date" : ISODate("2014-03-03T00:00:00Z"),
			"grade" : "A",
			"score" : 2
		},
		{
			"date" : ISODate("2013-09-11T00:00:00Z"),
			"grade" : "A",
			"score" : 6
		},
		{
			"date" : ISODate("2013-01-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2011-11-23T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2011-03-10T00:00:00Z"),
			"grade" : "B",
			"score" : 14
		}
	],
	"name" : "Morris Park Bake Shop",
	"restaurant_id" : "30075445"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed5c"),
	"address" : {
		"building" : "2300",
		"coord" : [
			-73.8786113,
			40.8502883
		],
		"street" : "Southern Boulevard",
		"zipcode" : "10460"
	},
	"borough" : "Bronx",
	"cuisine" : "American ",
	"grades" : [
		{
			"date" : ISODate("2014-05-28T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2013-06-19T00:00:00Z"),
			"grade" : "A",
			"score" : 4
		},
		{
			"date" : ISODate("2012-06-15T00:00:00Z"),
			"grade" : "A",
			"score" : 3
		}
	],
	"name" : "Wild Asia",
	"restaurant_id" : "40357217"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed72"),
	"address" : {
		"building" : "1006",
		"coord" : [
			-73.84856870000002,
			40.8903781
		],
		"street" : "East 233 Street",
		"zipcode" : "10466"
	},
	"borough" : "Bronx",
	"cuisine" : "Ice Cream, Gelato, Yogurt, Ices",
	"grades" : [
		{
			"date" : ISODate("2014-04-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-09-05T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-02-21T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2012-07-03T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2011-07-11T00:00:00Z"),
			"grade" : "A",
			"score" : 5
		}
	],
	"name" : "Carvel Ice Cream",
	"restaurant_id" : "40363093"



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

6. Write a MongoDB query to display the first 5 restaurant which is in the borough Bronx.

--->

db.restaurants.find({borough:'Bronx'}).pretty().limit(5)
{
	"_id" : ObjectId("6549fddc0fba03852f1bed55"),
	"address" : {
		"building" : "1007",
		"coord" : [
			-73.856077,
			40.848447
		],
		"street" : "Morris Park Ave",
		"zipcode" : "10462"
	},
	"borough" : "Bronx",
	"cuisine" : "Bakery",
	"grades" : [
		{
			"date" : ISODate("2014-03-03T00:00:00Z"),
			"grade" : "A",
			"score" : 2
		},
		{
			"date" : ISODate("2013-09-11T00:00:00Z"),
			"grade" : "A",
			"score" : 6
		},
		{
			"date" : ISODate("2013-01-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2011-11-23T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2011-03-10T00:00:00Z"),
			"grade" : "B",
			"score" : 14
		}
	],
	"name" : "Morris Park Bake Shop",
	"restaurant_id" : "30075445"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed5c"),
	"address" : {
		"building" : "2300",
		"coord" : [
			-73.8786113,
			40.8502883
		],
		"street" : "Southern Boulevard",
		"zipcode" : "10460"
	},
	"borough" : "Bronx",
	"cuisine" : "American ",
	"grades" : [
		{
			"date" : ISODate("2014-05-28T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2013-06-19T00:00:00Z"),
			"grade" : "A",
			"score" : 4
		},
		{
			"date" : ISODate("2012-06-15T00:00:00Z"),
			"grade" : "A",
			"score" : 3
		}
	],
	"name" : "Wild Asia",
	"restaurant_id" : "40357217"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bed72"),
	"address" : {
		"building" : "1006",
		"coord" : [
			-73.84856870000002,
			40.8903781
		],
		"street" : "East 233 Street",
		"zipcode" : "10466"
	},
	"borough" : "Bronx",
	"cuisine" : "Ice Cream, Gelato, Yogurt, Ices",
	"grades" : [
		{
			"date" : ISODate("2014-04-24T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-09-05T00:00:00Z"),
			"grade" : "A",
			"score" : 10
		},
		{
			"date" : ISODate("2013-02-21T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2012-07-03T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2011-07-11T00:00:00Z"),
			"grade" : "A",
			"score" : 5
		}
	],
	"name" : "Carvel Ice Cream",
	"restaurant_id" : "40363093"




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

7.Write a MongoDB query to display the next 5 restaurants after skipping first 5 which are in the
borough Bronx.

--->

db.restaurants.find({borough:'Bronx'}).skip(5).limit(5)


{ "_id" : ObjectId("6549fddc0fba03852f1bed91"), "address" : { "building" : "658", "coord" : [ -73.81363999999999, 40.82941100000001 ], "street" : "Clarence Ave", "zipcode" : "10465" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-06-21T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2012-07-11T00:00:00Z"), "grade" : "A", "score" : 10 } ], "name" : "Manhem Club", "restaurant_id" : "40364363" }
{ "_id" : ObjectId("6549fddc0fba03852f1bedaa"), "address" : { "building" : "2222", "coord" : [ -73.84971759999999, 40.8304811 ], "street" : "Haviland Avenue", "zipcode" : "10462" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-12-18T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2014-05-01T00:00:00Z"), "grade" : "B", "score" : 17 }, { "date" : ISODate("2013-03-14T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2012-09-20T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-02-08T00:00:00Z"), "grade" : "B", "score" : 19 } ], "name" : "The New Starling Athletic Club Of The Bronx", "restaurant_id" : "40364956" }
{ "_id" : ObjectId("6549fddc0fba03852f1bedc2"), "address" : { "building" : "72", "coord" : [ -73.92506, 40.8275556 ], "street" : "East  161 Street", "zipcode" : "10451" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-04-15T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2013-11-14T00:00:00Z"), "grade" : "A", "score" : 4 }, { "date" : ISODate("2013-07-29T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2012-12-31T00:00:00Z"), "grade" : "B", "score" : 15 }, { "date" : ISODate("2012-05-30T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-01-09T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-08-15T00:00:00Z"), "grade" : "C", "score" : 37 } ], "name" : "Yankee Tavern", "restaurant_id" : "40365499" }
{ "_id" : ObjectId("6549fddc0fba03852f1bedd4"), "address" : { "building" : "331", "coord" : [ -73.87786539999999, 40.8724377 ], "street" : "East  204 Street", "zipcode" : "10467" }, "borough" : "Bronx", "cuisine" : "Irish", "grades" : [ { "date" : ISODate("2014-08-26T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2014-03-26T00:00:00Z"), "grade" : "B", "score" : 23 }, { "date" : ISODate("2013-09-11T00:00:00Z"), "grade" : "A", "score" : 13 }, { "date" : ISODate("2012-12-18T00:00:00Z"), "grade" : "B", "score" : 27 }, { "date" : ISODate("2011-10-20T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Mcdwyers Pub", "restaurant_id" : "40365893" }
{ "_id" : ObjectId("6549fddc0fba03852f1bedee"), "address" : { "building" : "5820", "coord" : [ -73.9002615, 40.885186 ], "street" : "Broadway", "zipcode" : "10463" }, "borough" : "Bronx", "cuisine" : "American ", "grades" : [ { "date" : ISODate("2014-02-26T00:00:00Z"), "grade" : "A", "score" : 5 }, { "date" : ISODate("2013-10-09T00:00:00Z"), "grade" : "B", "score" : 19 }, { "date" : ISODate("2013-05-15T00:00:00Z"), "grade" : "A", "score" : 9 }, { "date" : ISODate("2012-11-20T00:00:00Z"), "grade" : "B", "score" : 18 }, { "date" : ISODate("2011-10-17T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-06-22T00:00:00Z"), "grade" : "C", "score" : 35 } ], "name" : "The Punch Bowl", "restaurant_id" : "40366497" }




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

8. Write a MongoDB query to find the restaurants who achieved a score more than 90.

--->

db.restaurants.find({grades:
...                     {$elemMatch:
...                     {score:{$gt:90}}}}).pretty()


{
	"_id" : ObjectId("6549fddc0fba03852f1beeb7"),
	"address" : {
		"building" : "65",
		"coord" : [
			-73.9782725,
			40.7624022
		],
		"street" : "West   54 Street",
		"zipcode" : "10019"
	},
	"borough" : "Manhattan",
	"cuisine" : "American ",
	"grades" : [
		{
			"date" : ISODate("2014-08-22T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2014-03-28T00:00:00Z"),
			"grade" : "C",
			"score" : 131
		},
		{
			"date" : ISODate("2013-09-25T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2013-04-08T00:00:00Z"),
			"grade" : "B",
			"score" : 25
		},
		{
			"date" : ISODate("2012-10-15T00:00:00Z"),
			"grade" : "A",
			"score" : 11
		},
		{
			"date" : ISODate("2011-10-19T00:00:00Z"),
			"grade" : "A",
			"score" : 13
		}
	],
	"name" : "Murals On 54/Randolphs'S",
	"restaurant_id" : "40372466"
}
{
	"_id" : ObjectId("6549fddc0fba03852f1bef53"),
	"address" : {
		"building" : "345",
		"coord" : [
			-73.9864626,
			40.7266739
		],
		"street" : "East 6 Street",
		"zipcode" : "10003"
	},
	"borough" : "Manhattan",
	"cuisine" : "Indian",
	"grades" : [
		{
			"date" : ISODate("2014-09-15T00:00:00Z"),
			"grade" : "A",
			"score" : 5
		},
		{
			"date" : ISODate("2014-01-14T00:00:00Z"),
			"grade" : "A",
			"score" : 8
		},
		{
			"date" : ISODate("2013-05-30T00:00:00Z"),
			"grade" : "A",
			"score" : 12
		},
		{
			"date" : ISODate("2013-04-24T00:00:00Z"),
			"grade" : "P",
			"score" : 2
		},
		{
			"date" : ISODate("2012-10-01T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2012-04-06T00:00:00Z"),
			"grade" : "C",
			"score" : 92
		},
		{
			"date" : ISODate("2011-11-03T00:00:00Z"),
			"grade" : "C",
			"score" : 41
		}
	],
	"name" : "Gandhi",
	"restaurant_id" : "40381295"
}

*****************************
db.restaurants.find({grades:
... ...                     {$elemMatch:
... ...                     {score:{$gt:90}}}}).pretty().count()
3








-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

9. Write a MongoDB query to find the restaurants that achieved a score, more than 80 but less than 100.

--->

db.restaurants.find({grades:{$elemMatch:{$and:[{score:{$gt:80}},{score:{$lt:100}}]}}}).pretty().count()
3
> db.restaurants.find({grades:{$elemMatch:{$and:[{score:{$gt:80}},{score:{$lt:100}}]}}}).pretty()
{
	"_id" : ObjectId("6549fddc0fba03852f1bef53"),
	"address" : {
		"building" : "345",
		"coord" : [
			-73.9864626,
			40.7266739
		],
		"street" : "East 6 Street",
		"zipcode" : "10003"
	},
	"borough" : "Manhattan",
	"cuisine" : "Indian",
	"grades" : [
		{
			"date" : ISODate("2014-09-15T00:00:00Z"),
			"grade" : "A",
			"score" : 5
		},
		{
			"date" : ISODate("2014-01-14T00:00:00Z"),
			"grade" : "A",
			"score" : 8
		},
		{
			"date" : ISODate("2013-05-30T00:00:00Z"),
			"grade" : "A",
			"score" : 12
		},
		{
			"date" : ISODate("2013-04-24T00:00:00Z"),
			"grade" : "P",
			"score" : 2
		},
		{
			"date" : ISODate("2012-10-01T00:00:00Z"),
			"grade" : "A",
			"score" : 9
		},
		{
			"date" : ISODate("2012-04-06T00:00:00Z"),
			"grade" : "C",
			"score" : 92
		},
		{
			"date" : ISODate("2011-11-03T00:00:00Z"),
			"grade" : "C",
			"score" : 41
		}
	],
	"name" : "Gandhi",
	"restaurant_id" : "40381295"
}


                            	

















